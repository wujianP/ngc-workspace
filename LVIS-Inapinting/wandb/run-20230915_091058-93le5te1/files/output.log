

Loading pipeline components...: 100%|███████████████████████████████████████████████████| 6/6 [00:02<00:00,  2.53it/s]
Python 3.8.16 (default, Jun 12 2023, 18:09:05)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.12.2 -- An enhanced Interactive Python. Type '?' for help.
[<PIL.Image.Image image mode=RGB size=640x427 at 0x7F821C272760>,
 <PIL.Image.Image image mode=RGB size=352x230 at 0x7F821C272730>,
 <PIL.Image.Image image mode=RGB size=640x428 at 0x7F821C2727F0>,
 <PIL.Image.Image image mode=RGB size=640x480 at 0x7F821C272790>,
 <PIL.Image.Image image mode=RGB size=640x388 at 0x7F821C2727C0>,
 <PIL.Image.Image image mode=RGB size=640x511 at 0x7F821C272820>,
 <PIL.Image.Image image mode=RGB size=427x640 at 0x7F821C272850>,
 <PIL.Image.Image image mode=RGB size=375x500 at 0x7F821C272880>]
['hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'shirt',
 'suspenders',
 'bowl',
 'bowl',
 'bowl',
 'bowl',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pan_(for_cooking)',
 'pie',
 'pie',
 'pie',
 'rolling_pin',
 'rolling_pin',
 'apron',
 'stove',
 'stove']
['hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'shirt',
 'suspenders',
 'bowl',
 'bowl',
 'bowl',
 'bowl',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pan(forcooking)',
 'pie',
 'pie',
 'pie',
 'rollingpin',
 'rollingpin',
 'apron',
 'stove',
 'stove']
['hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'hook',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'saucepan',
 'shirt',
 'suspenders',
 'bowl',
 'bowl',
 'bowl',
 'bowl',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pan (for cooking)',
 'pie',
 'pie',
 'pie',
 'rolling pin',
 'rolling pin',
 'apron',
 'stove',
 'stove']
640
427
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
Cell In[14], line 1
----> 1 import matplotlib.pyplo
      2 import numpy as np
ModuleNotFoundError: No module named 'matplotlib.pyplo'
<Figure size 1066.67x711.667 with 0 Axes>
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[18], line 7
      5 if len(boxes) > 0:
      6     for (box, label) in zip(boxes, cats):
----> 7         show_box(box, ax1, label)
      8 fig1 = plt.gcf()
Cell In[16], line 7, in show_box(box, ax, label)
      6 def show_box(box, ax, label):
----> 7     color = np.concatenate([np.random.random(3), np.array([0.6])], axis=0)
      8     x0, y0, w, h = box[0], box[1], box[2], box[3]
      9     ax.add_patch(plt.Rectangle((x0, y0), w, h, edgecolor=color, facecolor=(0, 0, 0, 0), lw=2))
NameError: name 'np' is not defined
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[20], line 7
      5 if len(boxes) > 0:
      6     for (box, label) in zip(boxes, cats):
----> 7         show_box(box, ax1, label)
      8 fig1 = plt.gcf()
Cell In[16], line 7, in show_box(box, ax, label)
      6 def show_box(box, ax, label):
----> 7     color = np.concatenate([np.random.random(3), np.array([0.6])], axis=0)
      8     x0, y0, w, h = box[0], box[1], box[2], box[3]
      9     ax.add_patch(plt.Rectangle((x0, y0), w, h, edgecolor=color, facecolor=(0, 0, 0, 0), lw=2))
